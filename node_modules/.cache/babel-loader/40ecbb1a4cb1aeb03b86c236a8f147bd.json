{"ast":null,"code":"var _jsxFileName = \"/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Form/elements/Checkbox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Checkbox({\n  className,\n  id,\n  required,\n  text = '',\n  readOnly,\n  tabIndex,\n  value,\n  onChange\n}) {\n  const classes = ['checkbox', className].toString().replace(/,+/g, ' ').trim();\n\n  const renderLabel = (label, htmlFor) => /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: htmlFor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, label, required && ' *');\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: id,\n    className: \"hidden\",\n    readOnly: readOnly,\n    tabIndex: tabIndex,\n    type: \"checkbox\",\n    value: value,\n    onChange: e => onChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), renderLabel(text, id));\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  required: PropTypes.bool,\n  text: PropTypes.string,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func\n};\nCheckbox.defaultProps = {\n  onChange: () => {}\n};\nexport default Checkbox;","map":{"version":3,"sources":["/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Form/elements/Checkbox.js"],"names":["React","PropTypes","Checkbox","className","id","required","text","readOnly","tabIndex","value","onChange","classes","toString","replace","trim","renderLabel","label","htmlFor","e","propTypes","string","bool","func","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,SAASC,QAAT,CAAkB;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,EAFgB;AAGhBC,EAAAA,QAHgB;AAIhBC,EAAAA,IAAI,GAAG,EAJS;AAKhBC,EAAAA,QALgB;AAMhBC,EAAAA,QANgB;AAOhBC,EAAAA,KAPgB;AAQhBC,EAAAA;AARgB,CAAlB,EASG;AACD,QAAMC,OAAO,GAAG,CAAC,UAAD,EAAaR,SAAb,EACbS,QADa,GAEbC,OAFa,CAEL,KAFK,EAEE,GAFF,EAGbC,IAHa,EAAhB;;AAKA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,kBAClB;AAAO,IAAA,OAAO,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,EAEGX,QAAQ,IAAI,IAFf,CADF;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEM,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAEP,EADN;AAEE,IAAA,SAAS,EAAC,QAFZ;AAGE,IAAA,QAAQ,EAAEG,QAHZ;AAIE,IAAA,QAAQ,EAAEC,QAJZ;AAKE,IAAA,IAAI,EAAC,UALP;AAME,IAAA,KAAK,EAAEC,KANT;AAOE,IAAA,QAAQ,EAAES,CAAC,IAAIR,QAAQ,CAACQ,CAAD,CAPzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAUGH,WAAW,CAACT,IAAD,EAAOF,EAAP,CAVd,CADF;AAcD;;AAEDF,QAAQ,CAACiB,SAAT,GAAqB;AACnBhB,EAAAA,SAAS,EAAEF,SAAS,CAACmB,MADF;AAEnBhB,EAAAA,EAAE,EAAEH,SAAS,CAACmB,MAFK;AAGnBf,EAAAA,QAAQ,EAAEJ,SAAS,CAACoB,IAHD;AAInBf,EAAAA,IAAI,EAAEL,SAAS,CAACmB,MAJG;AAKnBb,EAAAA,QAAQ,EAAEN,SAAS,CAACoB,IALD;AAMnBb,EAAAA,QAAQ,EAAEP,SAAS,CAACmB,MAND;AAOnBX,EAAAA,KAAK,EAAER,SAAS,CAACoB,IAPE;AAQnBX,EAAAA,QAAQ,EAAET,SAAS,CAACqB;AARD,CAArB;AAWApB,QAAQ,CAACqB,YAAT,GAAwB;AACtBb,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADI,CAAxB;AAGA,eAAeR,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Checkbox({\n  className,\n  id,\n  required,\n  text = '',\n  readOnly,\n  tabIndex,\n  value,\n  onChange\n}) {\n  const classes = ['checkbox', className]\n    .toString()\n    .replace(/,+/g, ' ')\n    .trim();\n\n  const renderLabel = (label, htmlFor) => (\n    <label htmlFor={htmlFor}>\n      {label}\n      {required && ' *'}\n    </label>\n  );\n\n  return (\n    <div className={classes}>\n      <input\n        id={id}\n        className=\"hidden\"\n        readOnly={readOnly}\n        tabIndex={tabIndex}\n        type=\"checkbox\"\n        value={value}\n        onChange={e => onChange(e)}\n      />\n      {renderLabel(text, id)}\n    </div>\n  );\n}\n\nCheckbox.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  required: PropTypes.bool,\n  text: PropTypes.string,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.string,\n  value: PropTypes.bool,\n  onChange: PropTypes.func\n};\n\nCheckbox.defaultProps = {\n  onChange: () => {}\n};\nexport default Checkbox;\n"]},"metadata":{},"sourceType":"module"}