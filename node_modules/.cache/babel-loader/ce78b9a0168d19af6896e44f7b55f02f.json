{"ast":null,"code":"var _jsxFileName = \"/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/docs/components/Modal/ModalDocs.js\";\nimport React, { Component } from 'react';\nimport Modal from '../../../components/Modal';\nimport Button from '../../../components/Button';\n\nclass ModalDocs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleModal = () => {\n      const {\n        isOpen\n      } = this.state;\n      document.getElementsByTagName('body')[0].style.overflow = isOpen ? 'auto' : 'hidden';\n      this.setState(prevState => ({\n        isOpen: !prevState.isOpen\n      }));\n    };\n\n    this.onSubmitCallback = () => {\n      alert('Submit clicked');\n    };\n\n    this.onCancelCallback = () => {\n      alert('cancel clicked');\n    };\n\n    this.renderContent = () => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, \"hello how are you\");\n\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  render() {\n    const {\n      isOpen\n    } = this.state;\n    const header = {\n      title: 'Sample title',\n      closeOnOutsideClick: false,\n      // isRemoveCloseIcon : true,  // send if needed to hide close icon on header\n      style: {// backgroundColor: 'red'\n      }\n    };\n    const footer = {\n      onSubmit: this.onSubmitCallback,\n      onCancel: this.onCancelCallback,\n      submitText: 'Save',\n      cancelText: 'Delete',\n      style: {// backgroundColor:'blue'\n      },\n      disableSubmit: false,\n      disableCancel: false\n    };\n    const customStyle = {// color:'yellow'\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      key: \"open modal\",\n      text: \"Open Modal\",\n      onClick: this.toggleModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: isOpen,\n      onClose: this.toggleModal,\n      header: header,\n      footer: footer,\n      customStyle: customStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, this.renderContent()));\n  }\n\n}\n\nexport default ModalDocs;","map":{"version":3,"sources":["/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/docs/components/Modal/ModalDocs.js"],"names":["React","Component","Modal","Button","ModalDocs","constructor","props","toggleModal","isOpen","state","document","getElementsByTagName","style","overflow","setState","prevState","onSubmitCallback","alert","onCancelCallback","renderContent","render","header","title","closeOnOutsideClick","footer","onSubmit","onCancel","submitText","cancelText","disableSubmit","disableCancel","customStyle"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAChCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,WAPmB,GAOL,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACAC,MAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,KAAzC,CAA+CC,QAA/C,GAA0DL,MAAM,GAC5D,MAD4D,GAE5D,QAFJ;AAGA,WAAKM,QAAL,CAAcC,SAAS,KAAK;AAC1BP,QAAAA,MAAM,EAAE,CAACO,SAAS,CAACP;AADO,OAAL,CAAvB;AAGD,KAfkB;;AAAA,SAiBnBQ,gBAjBmB,GAiBA,MAAM;AACvBC,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KAnBkB;;AAAA,SAqBnBC,gBArBmB,GAqBA,MAAM;AACvBD,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACD,KAvBkB;;AAAA,SAyBnBE,aAzBmB,GAyBH,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAzBH;;AAEjB,SAAKV,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAsBDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEZ,MAAAA;AAAF,QAAa,KAAKC,KAAxB;AACA,UAAMY,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAE,cADM;AAEbC,MAAAA,mBAAmB,EAAE,KAFR;AAGb;AACAX,MAAAA,KAAK,EAAE,CACL;AADK;AAJM,KAAf;AAQA,UAAMY,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE,KAAKT,gBADF;AAEbU,MAAAA,QAAQ,EAAE,KAAKR,gBAFF;AAGbS,MAAAA,UAAU,EAAE,MAHC;AAIbC,MAAAA,UAAU,EAAE,QAJC;AAKbhB,MAAAA,KAAK,EAAE,CACL;AADK,OALM;AAQbiB,MAAAA,aAAa,EAAE,KARF;AASbC,MAAAA,aAAa,EAAE;AATF,KAAf;AAWA,UAAMC,WAAW,GAAG,CAClB;AADkB,KAApB;AAIA,wBACE,uDACE,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAC,YAAZ;AAAyB,MAAA,IAAI,EAAC,YAA9B;AAA2C,MAAA,OAAO,EAAE,KAAKxB,WAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAEC,MADV;AAEE,MAAA,OAAO,EAAE,KAAKD,WAFhB;AAGE,MAAA,MAAM,EAAEc,MAHV;AAIE,MAAA,MAAM,EAAEG,MAJV;AAKE,MAAA,WAAW,EAAEO,WALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKZ,aAAL,EAPH,CAFF,CADF;AAcD;;AAnE+B;;AAsElC,eAAef,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from '../../../components/Modal';\nimport Button from '../../../components/Button';\nclass ModalDocs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggleModal = () => {\n    const { isOpen } = this.state;\n    document.getElementsByTagName('body')[0].style.overflow = isOpen\n      ? 'auto'\n      : 'hidden';\n    this.setState(prevState => ({\n      isOpen: !prevState.isOpen\n    }));\n  };\n\n  onSubmitCallback = () => {\n    alert('Submit clicked');\n  };\n\n  onCancelCallback = () => {\n    alert('cancel clicked');\n  };\n\n  renderContent = () => <div>hello how are you</div>;\n\n  render() {\n    const { isOpen } = this.state;\n    const header = {\n      title: 'Sample title',\n      closeOnOutsideClick: false,\n      // isRemoveCloseIcon : true,  // send if needed to hide close icon on header\n      style: {\n        // backgroundColor: 'red'\n      }\n    };\n    const footer = {\n      onSubmit: this.onSubmitCallback,\n      onCancel: this.onCancelCallback,\n      submitText: 'Save',\n      cancelText: 'Delete',\n      style: {\n        // backgroundColor:'blue'\n      },\n      disableSubmit: false,\n      disableCancel: false\n    };\n    const customStyle = {\n      // color:'yellow'\n    };\n\n    return (\n      <>\n        <Button key=\"open modal\" text=\"Open Modal\" onClick={this.toggleModal} />\n        <Modal\n          isOpen={isOpen}\n          onClose={this.toggleModal}\n          header={header}\n          footer={footer}\n          customStyle={customStyle}\n        >\n          {this.renderContent()}\n        </Modal>\n      </>\n    );\n  }\n}\n\nexport default ModalDocs;\n"]},"metadata":{},"sourceType":"module"}