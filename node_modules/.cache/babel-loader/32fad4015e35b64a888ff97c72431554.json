{"ast":null,"code":"var _jsxFileName = \"/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Form/elements/Textarea.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Textarea({\n  cols,\n  rows,\n  wrap,\n  disabled,\n  id,\n  className,\n  name,\n  value,\n  required,\n  placeholder,\n  maxLength,\n  onChange,\n  readOnly,\n  label,\n  errorMessage\n}) {\n  const renderLabel = (text, htmlFor) => {\n    if (text === undefined) return null;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: htmlFor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, text, required && ' *');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"textarea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, renderLabel(label, id, required), /*#__PURE__*/React.createElement(\"textarea\", {\n    onChange: onChange,\n    rows: parseInt(rows),\n    cols: parseInt(cols),\n    required: required,\n    readOnly: readOnly,\n    placeholder: placeholder,\n    name: name,\n    maxLength: maxLength,\n    disabled: disabled,\n    id: id,\n    value: value,\n    wrap: wrap,\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), errorMessage && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input__error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, errorMessage));\n}\n\nTextarea.defaultProps = {\n  cols: 50,\n  rows: 5\n};\nTextarea.propTypes = {\n  cols: PropTypes.number,\n  rows: PropTypes.number,\n  wrap: PropTypes.string,\n  maxLength: PropTypes.number,\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  label: PropTypes.string,\n  errorMessage: PropTypes.string\n};\nexport default Textarea;","map":{"version":3,"sources":["/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Form/elements/Textarea.js"],"names":["React","PropTypes","Textarea","cols","rows","wrap","disabled","id","className","name","value","required","placeholder","maxLength","onChange","readOnly","label","errorMessage","renderLabel","text","htmlFor","undefined","parseInt","defaultProps","propTypes","number","string","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Textarea({\n  cols,\n  rows,\n  wrap,\n  disabled,\n  id,\n  className,\n  name,\n  value,\n  required,\n  placeholder,\n  maxLength,\n  onChange,\n  readOnly,\n  label,\n  errorMessage\n}) {\n  const renderLabel = (text, htmlFor) => {\n    if (text === undefined) return null;\n    return (\n      <label htmlFor={htmlFor}>\n        {text}\n        {required && ' *'}\n      </label>\n    );\n  };\n\n  return (\n    <div className=\"textarea\">\n      {renderLabel(label, id, required)}\n      <textarea\n        onChange={onChange}\n        rows={parseInt(rows)}\n        cols={parseInt(cols)}\n        required={required}\n        readOnly={readOnly}\n        placeholder={placeholder}\n        name={name}\n        maxLength={maxLength}\n        disabled={disabled}\n        id={id}\n        value={value}\n        wrap={wrap}\n        className={className}\n      />\n      {errorMessage && (\n        <div className=\"input__error-message\">{errorMessage}</div>\n      )}\n    </div>\n  );\n}\n\nTextarea.defaultProps = {\n  cols: 50,\n  rows: 5\n};\n\nTextarea.propTypes = {\n  cols: PropTypes.number,\n  rows: PropTypes.number,\n  wrap: PropTypes.string,\n  maxLength: PropTypes.number,\n  disabled: PropTypes.bool,\n  id: PropTypes.string,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  required: PropTypes.bool,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  readOnly: PropTypes.bool,\n  label: PropTypes.string,\n  errorMessage: PropTypes.string\n};\n\nexport default Textarea;\n"]},"metadata":{},"sourceType":"module"}