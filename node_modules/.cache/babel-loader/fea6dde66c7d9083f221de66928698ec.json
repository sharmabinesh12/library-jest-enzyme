{"ast":null,"code":"var _jsxFileName = \"/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Menu/partials/_Menu.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClickOutside = event => {\n      const {\n        isMenuOpen\n      } = this.state;\n\n      if (!isMenuOpen) {\n        return;\n      }\n\n      const buttonBoundary = this.getBoundary();\n\n      if (this.isInsideBoundary(event, buttonBoundary)) {\n        this.onMenuTrigger();\n      }\n    };\n\n    this.getBoundary = () => {\n      const {\n        left,\n        width,\n        top,\n        height\n      } = this.wrapperRef.getBoundingClientRect();\n      return {\n        X: {\n          min: left,\n          max: left + width\n        },\n        Y: {\n          min: top,\n          max: top + height\n        }\n      };\n    };\n\n    this.isInsideBoundary = (event, boundary) => boundary.X.max < event.clientX || event.clientX < boundary.X.min || boundary.Y.max < event.clientY || event.clientY < boundary.Y.min;\n\n    this.triggerMenuRef = node => {\n      this.wrapperRef = node;\n    };\n\n    this.onMenuTrigger = () => {\n      this.setState(prevState => ({\n        isMenuOpen: !prevState.isMenuOpen\n      }));\n    };\n\n    this.setlistRefs = node => {\n      const {\n        isMenuOpen\n      } = this.state;\n      if (!isMenuOpen) return;\n      const listRect = node.getBoundingClientRect();\n      const triggerRect = this.wrapperRef.getBoundingClientRect();\n      const positionState = {\n        horizontalPlacement: 'right',\n        verticalPlacement: 'bottom'\n      };\n\n      if (triggerRect.left + listRect.width > window.innerWidth) {\n        positionState.horizontalPlacement = 'left';\n      } else if (listRect.left < 0) {\n        positionState.horizontalPlacement = 'right';\n      }\n\n      if (triggerRect.top + listRect.height > window.innerHeight) {\n        this.listDom = node;\n        positionState.verticalPlacement = 'top';\n      } else if (listRect.top < 0) {\n        this.listDom = node;\n        positionState.verticalPlacement = 'bottom';\n      }\n\n      this.setState({\n        positionState\n      });\n    };\n\n    this.getClassName = () => {\n      const {\n        positionState\n      } = this.state;\n      let className = '';\n\n      if (positionState) {\n        className += ` menu-container--horizontal-${positionState.horizontalPlacement}`;\n        if (this.listDom) this.listDom.style.bottom = `${this.wrapperRef.getBoundingClientRect().height + 4}px`;\n      }\n\n      return className;\n    };\n\n    this.renderMenuList = menuItems => menuItems;\n\n    this.state = {\n      isMenuOpen: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleClickOutside);\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      menuListItems\n    } = this.props;\n    const {\n      isMenuOpen\n    } = this.state;\n    const listContainerClass = `menu-container__list-container ${className} ${this.getClassName()}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menu-container\",\n      onClick: e => this.onMenuTrigger(e),\n      ref: this.triggerMenuRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, children, isMenuOpen ? /*#__PURE__*/React.createElement(\"div\", {\n      className: listContainerClass,\n      ref: this.setlistRefs,\n      id: \"listDom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, this.renderMenuList(menuListItems)) : null));\n  }\n\n}\n\nMenu.propTypes = {\n  className: PropTypes.string\n};\nMenu.defaultProps = {\n  className: ''\n};\nexport default Menu;","map":{"version":3,"sources":["/home/binesh/Desktop/BineshDocs1/Learning/Reactjs/unit-testing/library-jest-enzyme/src/components/Menu/partials/_Menu.js"],"names":["React","Component","PropTypes","Menu","constructor","props","handleClickOutside","event","isMenuOpen","state","buttonBoundary","getBoundary","isInsideBoundary","onMenuTrigger","left","width","top","height","wrapperRef","getBoundingClientRect","X","min","max","Y","boundary","clientX","clientY","triggerMenuRef","node","setState","prevState","setlistRefs","listRect","triggerRect","positionState","horizontalPlacement","verticalPlacement","window","innerWidth","innerHeight","listDom","getClassName","className","style","bottom","renderMenuList","menuItems","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","children","menuListItems","listContainerClass","e","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMenuOpen: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('click', this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('click', this.handleClickOutside);\n  }\n\n  handleClickOutside = event => {\n    const { isMenuOpen } = this.state;\n    if (!isMenuOpen) {\n      return;\n    }\n\n    const buttonBoundary = this.getBoundary();\n    if (this.isInsideBoundary(event, buttonBoundary)) {\n      this.onMenuTrigger();\n    }\n  };\n\n  getBoundary = () => {\n    const {\n      left,\n      width,\n      top,\n      height\n    } = this.wrapperRef.getBoundingClientRect();\n    return {\n      X: {\n        min: left,\n        max: left + width\n      },\n      Y: {\n        min: top,\n        max: top + height\n      }\n    };\n  };\n\n  isInsideBoundary = (event, boundary) =>\n    boundary.X.max < event.clientX ||\n    event.clientX < boundary.X.min ||\n    (boundary.Y.max < event.clientY || event.clientY < boundary.Y.min);\n\n  triggerMenuRef = node => {\n    this.wrapperRef = node;\n  };\n\n  onMenuTrigger = () => {\n    this.setState(prevState => ({\n      isMenuOpen: !prevState.isMenuOpen\n    }));\n  };\n\n  setlistRefs = node => {\n    const { isMenuOpen } = this.state;\n\n    if (!isMenuOpen) return;\n    const listRect = node.getBoundingClientRect();\n    const triggerRect = this.wrapperRef.getBoundingClientRect();\n    const positionState = {\n      horizontalPlacement: 'right',\n      verticalPlacement: 'bottom'\n    };\n    if (triggerRect.left + listRect.width > window.innerWidth) {\n      positionState.horizontalPlacement = 'left';\n    } else if (listRect.left < 0) {\n      positionState.horizontalPlacement = 'right';\n    }\n\n    if (triggerRect.top + listRect.height > window.innerHeight) {\n      this.listDom = node;\n      positionState.verticalPlacement = 'top';\n    } else if (listRect.top < 0) {\n      this.listDom = node;\n      positionState.verticalPlacement = 'bottom';\n    }\n    this.setState({ positionState });\n  };\n\n  getClassName = () => {\n    const { positionState } = this.state;\n\n    let className = '';\n    if (positionState) {\n      className += ` menu-container--horizontal-${\n        positionState.horizontalPlacement\n      }`;\n      if (this.listDom)\n        this.listDom.style.bottom = `${this.wrapperRef.getBoundingClientRect()\n          .height + 4}px`;\n    }\n    return className;\n  };\n\n  renderMenuList = menuItems => menuItems;\n\n  render() {\n    const { children, className, menuListItems } = this.props;\n    const { isMenuOpen } = this.state;\n    const listContainerClass = `menu-container__list-container ${className} ${this.getClassName()}`;\n    return (\n      <>\n        <div\n          className=\"menu-container\"\n          onClick={e => this.onMenuTrigger(e)}\n          ref={this.triggerMenuRef}\n        >\n          {children}\n          {isMenuOpen ? (\n            <div\n              className={listContainerClass}\n              ref={this.setlistRefs}\n              id=\"listDom\"\n            >\n              {this.renderMenuList(menuListItems)}\n            </div>\n          ) : null}\n        </div>\n      </>\n    );\n  }\n}\n\nMenu.propTypes = {\n  className: PropTypes.string\n};\n\nMenu.defaultProps = {\n  className: ''\n};\n\nexport default Menu;\n"]},"metadata":{},"sourceType":"module"}